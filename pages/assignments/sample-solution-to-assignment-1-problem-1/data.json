
{
  "title":"Sample Solution to Assignment 1, Problem 1",
  "content":"« Back to Assignments\n/* PROG: floating LANG: C */ #include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdlib.h\u0026gt; #include \u0026lt;stdint.h\u0026gt; #include \u0026lt;math.h\u0026gt; #define ABSOLUTE_WIDTH 31 #define MANTISSA_WIDTH 23 #define EXPONENT_WIDTH 8 #define EXPONENT_MASK 0xffu #define MANTISSA_MASK 0x007fffffu #define EXPONENT_BIAS 127 union float_bits { float f; uint32_t bits; }; void print_float( FILE *output, float f ) { union float_bits t; t.f = f; uint32_t sign_bit = ( t.bits \u0026gt;\u0026gt; ABSOLUTE_WIDTH ); uint32_t exponent = ( t.bits \u0026gt;\u0026gt; MANTISSA_WIDTH ) \u0026amp; EXPONENT_MASK; uint32_t mantissa = ( t.bits \u0026amp; MANTISSA_MASK ); if( sign_bit != 0 ) { fprintf( output, \u0026#34;-\u0026#34; ); } if( exponent \u0026gt; 2 * EXPONENT_BIAS ) { fprintf( output, \u0026#34;Inf\\n\u0026#34; ); /* Infinity */ return; } else if( exponent == 0 ) { fprintf( output, \u0026#34;0.\u0026#34; ); /* Zero or Denormal */ exponent = ( mantissa != 0 ) ? exponent + 1 : exponent; } else { fprintf( output, \u0026#34;1.\u0026#34; ); /* Usual */ } for( int k = MANTISSA_WIDTH - 1; k \u0026gt;= 0; --k ) { fprintf( output, \u0026#34;%d\u0026#34;, ( mantissa \u0026gt;\u0026gt; k ) \u0026amp; 1 ); } if( exponent != 0 || mantissa != 0 ) { fprintf( output, \u0026#34; * 2^%d\\n\u0026#34;, (int) ( exponent - EXPONENT_BIAS ) ); } } int main() { FILE *input = fopen( \u0026#34;floating.in\u0026#34;, \u0026#34;r\u0026#34; ), *output = fopen( \u0026#34;floating.out\u0026#34;, \u0026#34;w\u0026#34; ); size_t N; float f; fscanf( input, \u0026#34;%zu\u0026#34;, \u0026amp;N ); for( size_t i = 0; i \u0026lt; N; ++i ) { fscanf( input, \u0026#34;%f\u0026#34;, \u0026amp;f ); print_float( output, f ); } fclose( input ); fclose( output ); return 0; } Below is the output using the test data:\nfloating: 1: OK [0.004 seconds] OK! 2: OK [0.004 seconds] OK! 3: OK [0.004 seconds] OK! 4: OK [0.004 seconds] OK! 5: OK [0.005 seconds] OK! 6: OK [0.004 seconds] OK! 7: OK [0.004 seconds] OK! « "}


